name: Update TFT Data

on:
  schedule:
    - cron: '30 0 * * *'  # 00:30 UTC mỗi ngày
    - cron: '30 12 * * *' # 12:30 UTC mỗi ngày
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch Data from Workers
        run: |
          mkdir -p public/data/auto
          TODAY=$(date +%Y-%m-%d)
          
          DATA_FILES=("data-${TODAY}.json")
          GUIDES_FILES=("guides-${TODAY}.json")
          REVIVAL_FILES=("set-10-revival-${TODAY}.json")
          REVIVAL_GUIDES_FILES=("revival-guides-${TODAY}.json")

          # Tải file từ Worker 1 (tftdata)
          for filename in "${DATA_FILES[@]}"; do
            echo "Attempting to download $filename from tftdata..."
            curl -X GET "https://tftdata.hoquocdieu.workers.dev/?file=$filename" -o "public/data/auto/$filename" || echo "File $filename not found in tftdata, skipping..."
          done

          # Tải file từ Worker 2 (tftguides)
          for filename in "${GUIDES_FILES[@]}"; do
            echo "Attempting to download $filename from tftguides..."
            curl -X GET "https://tftguides.hoquocdieu.workers.dev/?file=$filename" -o "public/data/auto/$filename" || echo "File $filename not found in tftguides, skipping..."
          done

          # Tải file từ Worker 3 (tft-data-revival)
          for filename in "${REVIVAL_FILES[@]}"; do
            echo "Attempting to download $filename from tft-data-revival..."
            curl -X GET "https://tft-data-revival.hoquocdieu.workers.dev/?file=$filename" -o "public/data/auto/$filename" || echo "File $filename not found in tft-data-revival, skipping..."
          done

          # Tải file từ Worker 4 (tft-guides-revival)
          for filename in "${REVIVAL_GUIDES_FILES[@]}"; do
            echo "Attempting to download $filename from tft-guides-revival..."
            curl -X GET "https://tft-guides-revival.hoquocdieu.workers.dev/?file=$filename" -o "public/data/auto/$filename" || echo "File $filename not found in tft-guides-revival, skipping..."
          done

      - name: Validate JSON Files
        run: |
          for file in public/data/auto/*.json; do
            if [ -f "$file" ]; then
              if [ ! -s "$file" ]; then
                echo "File $file is empty, removing..."
                rm "$file"
                continue
              fi
              jq . "$file" > /dev/null || { echo "Invalid JSON in $file"; exit 1; }
              if jq -e '.error' "$file" > /dev/null; then
                echo "File $file contains an error, removing..."
                rm "$file"
              else
                echo "Validated $file"
              fi
            fi
          done

      - name: Clean Old Files in public/data/auto
        run: |
          echo "Files before cleanup:"
          ls -l public/data/auto/

          echo "Cleaning old data-*.json files..."
          ls public/data/auto/data-*.json 2>/dev/null | sort -r | tail -n +3 | xargs -I {} rm -v {}

          echo "Cleaning old guides-*.json files..."
          ls public/data/auto/guides-*.json 2>/dev/null | sort -r | tail -n +3 | xargs -I {} rm -v {}

          echo "Cleaning old set-10-revival-*.json files..."
          ls public/data/auto/set-10-revival-*.json 2>/dev/null | sort -r | tail -n +3 | xargs -I {} rm -v {}

          echo "Cleaning old revival-guides-*.json files..."
          ls public/data/auto/revival-guides-*.json 2>/dev/null | sort -r | tail -n +3 | xargs -I {} rm -v {}

          echo "Files after cleanup:"
          ls -l public/data/auto/

      - name: Commit Changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

          if [ -n "$(git status --porcelain)" ]; then
            echo "Unstaged changes detected, stashing them..."
            git add .
            git stash
          fi

          git pull origin main --rebase || { echo "Pull failed"; exit 1; }

          if git stash list | grep -q "stash"; then
            echo "Applying stashed changes..."
            git stash pop || { echo "Stash pop failed, resolving conflicts may be needed"; exit 1; }
          fi

          echo "Git status before staging:"
          git status

          echo "Staging all changes, including deletions..."
          git add -A

          echo "Git status after staging:"
          git status

          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          echo "Committing changes..."
          git commit -m "Update TFT data on $(date +'%Y-%m-%d')"
          git push

          echo "Files remaining in public/data/auto after commit:"
          ls -l public/data/auto/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}